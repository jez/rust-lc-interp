use crate::loc::Loc;
use crate::global_state::FileRef;
use crate::parser::Node;

grammar(file: FileRef);

pub Ident: String = <s:r"[a-z]([A-Za-z_'])*"> => s.to_string();

pub Node: Box<Node> = {
    <begin:@L> "\\" <param:Ident> r"->" <body:Node> <end:@R> =>
      Box::new(Node::Lam { loc: Loc { begin, end, file }, param, body }),
    <Fact>,
}

pub Fact: Box<Node> = {
    <begin:@L> <f:Fact> <arg:Atom> <end:@R> =>
      Box::new(Node::App { loc: Loc { begin, end, file }, f, arg }),
    <Atom>,
}

pub Atom: Box<Node> = {
    "(" <Node> ")",
    <begin:@L> <var:Ident> <end:@R> =>
      Box::new(Node::Var { loc: Loc { begin, end, file }, var }),
}
